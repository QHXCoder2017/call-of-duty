Python

class Solution:
    def isValid(self, s: str) -> bool:
        list = []
        for c in s:
            if (c == '('):
                list.append(')')
            elif (c == '{'):
                list.append('}')
            elif (c == '['):
                list.append(']')
            elif (not list or c != list.pop()):
                return False
        return not list
        
C++

class Solution
{
public:
    bool isValid(string s)
    {
        stack<char> parentheses;
        for (int i = 0; i < s.size(); ++i)
        {
            if (s[i] == '(' || s[i] == '[' || s[i] == '{')
                parentheses.push(s[i]);
            else
            {
                if (parentheses.empty())
                    return false;
                if (s[i] == ')' && parentheses.top() != '(')
                    return false;
                if (s[i] == ']' && parentheses.top() != '[')
                    return false;
                if (s[i] == '}' && parentheses.top() != '{')
                    return false;
                parentheses.pop();
            }
        }
        return parentheses.empty();
    }
};

Python

class Solution:
    def plusOne(self, digits):
        array_len = len(digits)
        if array_len > 0:
            c = 0
            digits[array_len-1] += 1
            if digits[array_len-1] > 9:
                digits[array_len-1] -= 10
                c = 1
            for i in range(array_len-2, -1, -1): # 从倒数第2个元素到倒数第1个元素
                digits[i] += c
                if digits[i] > 9:
                    digits[i] -= 10
                    c = 1
                else:
                    c = 0
            if c == 1:
                digits.append(1)
                for i in range(0, array_len):
                    digits[i+1] =  digits[i]
                digits[0] = 1
            return digits
            
C++

class Solution 
{
public:
    vector<int> plusOne(vector<int>& digits) 
    {
        int c = 0;
        int sum = 0;
        for(int i = digits.size() - 1; i >= 0; --i)
        {
            if(i == digits.size() - 1)  /*对digits的末位进行操作*/
            {
                sum = (digits[i] + 1 + c) % 10;
                jinwei = (digits[i] + 1 + c) / 10;
            }
            else
            {
                sum = (digits[i] + c) % 10;
                jinwei = (digits[i] + c) / 10;
            }
            digits[i] = sum; /*将+1后的值给digits的末位*/
           /* sum = 0; */
        }
        if(c != 0)
        {
            digits.insert(digits.begin(), c);
        }
        return digits;
    }
};

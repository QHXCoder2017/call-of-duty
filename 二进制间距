Python

class Solution:
    def binaryGap(self, N: int) -> int:
        A = [i for i in range(32) if (N>>i) & 1]
        if len(A) < 2:
            return 0
        return max(A[i+1]-A[i] for i in range(len(A)-1))
        
C++

class Solution
{
public:
    int binaryGap(int N)
    {
        int pre = -1;
        int idx = 0;
        int res = 0;
        while(N)
        {
            if(N&1)
            {
                if(pre != -1)
                {
                    res = max(res, idx - pre);
                }
                pre = idx;
            }
            N >>= 1;
            idx++;
        }
        return res;
    }
};

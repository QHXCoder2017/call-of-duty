Python

class Solution:
    def intersect(self, nums1, nums2):
        record = {}
        result = []
        for num in nums1:
            record[num] = record.get(num, 0) + 1
        for num in nums2:
            if num in record and in record[num]:
                result.append(num)
                record[num] -= 1
        return result

C++

class Solution:
{
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2)
    {
        std::sort(nums1.begin(), nums1.end());
        std::sort(nums2.begin(), nums2.end());
        vector<int> res;
        int l1 = 0;
        int l2 = 0;
        while (l1 < nums1.size() && l2 < nums2.size())
        {
            if (nums1[l1] == nums2[l2])
            {
                res.push_back(nums1[l1]);
                ++l1;
                ++l2;
            }
            else if (nums1[l1] > nums2[l2])
            {
                ++l2;    
            }
            else
            {
                ++l1;
            }
        }
        return res;
    }
};
